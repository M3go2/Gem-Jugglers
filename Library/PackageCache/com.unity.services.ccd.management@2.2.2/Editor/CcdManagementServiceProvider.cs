//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using UnityEngine;
using System.Threading.Tasks;

using Unity.Services.Ccd.Management.Apis.Badges;

using Unity.Services.Ccd.Management.Apis.BucketAccessTokens;

using Unity.Services.Ccd.Management.Apis.Buckets;

using Unity.Services.Ccd.Management.Apis.Content;

using Unity.Services.Ccd.Management.Apis.Default;

using Unity.Services.Ccd.Management.Apis.Entries;

using Unity.Services.Ccd.Management.Apis.Environments;

using Unity.Services.Ccd.Management.Apis.Orgs;

using Unity.Services.Ccd.Management.Apis.Permissions;

using Unity.Services.Ccd.Management.Apis.Releases;

using Unity.Services.Ccd.Management.Apis.Users;

using Unity.Services.Ccd.Management.Http;
using Unity.Services.Core.Internal;

namespace Unity.Services.Ccd.Management
{
    internal class CcdManagementServiceProvider : IInitializablePackage
    {
        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
        static void Register()
        {
            // Pass an instance of this class to Core
            var generatedPackageRegistry =
            CoreRegistry.Instance.RegisterPackage(new CcdManagementServiceProvider());
                // And specify what components it requires, or provides.
;
        }

        public Task Initialize(CoreRegistry registry)
        {
            var httpClient = new HttpClient();

            CcdManagementService.Instance = new InternalCcdManagementService(httpClient);

            return Task.CompletedTask;
        }
    }

    /// <summary>
    /// InternalCcdManagementService
    /// </summary>
    internal class InternalCcdManagementService : ICcdManagementService
    {
        /// <summary>
        /// Constructor for InternalCcdManagementService
        /// </summary>
        /// <param name="httpClient">The HttpClient for InternalCcdManagementService.</param>
        
        public InternalCcdManagementService(HttpClient httpClient)
        {
            
            BadgesApi = new BadgesApiClient(httpClient);
            
            BucketAccessTokensApi = new BucketAccessTokensApiClient(httpClient);
            
            BucketsApi = new BucketsApiClient(httpClient);
            
            ContentApi = new ContentApiClient(httpClient);
            
            DefaultApi = new DefaultApiClient(httpClient);
            
            EntriesApi = new EntriesApiClient(httpClient);
            
            EnvironmentsApi = new EnvironmentsApiClient(httpClient);
            
            OrgsApi = new OrgsApiClient(httpClient);
            
            PermissionsApi = new PermissionsApiClient(httpClient);
            
            ReleasesApi = new ReleasesApiClient(httpClient);
            
            UsersApi = new UsersApiClient(httpClient);
            
            Configuration = new Configuration("https://services.unity.com", 10, 4, null);
        }
        
        /// <summary> Instance of IBadgesApiClient interface</summary>
        public IBadgesApiClient BadgesApi { get; set; }
        
        /// <summary> Instance of IBucketAccessTokensApiClient interface</summary>
        public IBucketAccessTokensApiClient BucketAccessTokensApi { get; set; }
        
        /// <summary> Instance of IBucketsApiClient interface</summary>
        public IBucketsApiClient BucketsApi { get; set; }
        
        /// <summary> Instance of IContentApiClient interface</summary>
        public IContentApiClient ContentApi { get; set; }
        
        /// <summary> Instance of IDefaultApiClient interface</summary>
        public IDefaultApiClient DefaultApi { get; set; }
        
        /// <summary> Instance of IEntriesApiClient interface</summary>
        public IEntriesApiClient EntriesApi { get; set; }
        
        /// <summary> Instance of IEnvironmentsApiClient interface</summary>
        public IEnvironmentsApiClient EnvironmentsApi { get; set; }
        
        /// <summary> Instance of IOrgsApiClient interface</summary>
        public IOrgsApiClient OrgsApi { get; set; }
        
        /// <summary> Instance of IPermissionsApiClient interface</summary>
        public IPermissionsApiClient PermissionsApi { get; set; }
        
        /// <summary> Instance of IReleasesApiClient interface</summary>
        public IReleasesApiClient ReleasesApi { get; set; }
        
        /// <summary> Instance of IUsersApiClient interface</summary>
        public IUsersApiClient UsersApi { get; set; }
        
        /// <summary> Configuration properties for the service.</summary>
        public Configuration Configuration { get; set; }
    }
}
