//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ccd.Management.Http;



namespace Unity.Services.Ccd.Management.Models
{
    /// <summary>
    /// CcdReleaseChangeVersion model
    /// </summary>
    [Preserve]
    [DataContract(Name = "ccd.releaseChangeVersion")]
    public class CcdReleaseChangeVersion
    {
        /// <summary>
        /// Creates an instance of CcdReleaseChangeVersion.
        /// </summary>
        /// <param name="add">add param</param>
        /// <param name="delete">delete param</param>
        /// <param name="lastModified">lastModified param</param>
        /// <param name="lastModifiedBy">lastModifiedBy param</param>
        /// <param name="lastModifiedByName">lastModifiedByName param</param>
        /// <param name="loading">loading param</param>
        /// <param name="unchanged">unchanged param</param>
        /// <param name="update">update param</param>
        [Preserve]
        public CcdReleaseChangeVersion(int add = default, int delete = default, DateTime lastModified = default, string lastModifiedBy = default, string lastModifiedByName = default, bool loading = default, int unchanged = default, int update = default)
        {
            Add = add;
            Delete = delete;
            LastModified = lastModified;
            LastModifiedBy = lastModifiedBy;
            LastModifiedByName = lastModifiedByName;
            Loading = loading;
            Unchanged = unchanged;
            Update = update;
        }

        /// <summary>
        /// Parameter add of CcdReleaseChangeVersion
        /// </summary>
        [Preserve]
        [DataMember(Name = "add", EmitDefaultValue = false)]
        public int Add{ get; }
        
        /// <summary>
        /// Parameter delete of CcdReleaseChangeVersion
        /// </summary>
        [Preserve]
        [DataMember(Name = "delete", EmitDefaultValue = false)]
        public int Delete{ get; }
        
        /// <summary>
        /// Parameter last_modified of CcdReleaseChangeVersion
        /// </summary>
        [Preserve]
        [DataMember(Name = "last_modified", EmitDefaultValue = false)]
        public DateTime LastModified{ get; }
        
        /// <summary>
        /// Parameter last_modified_by of CcdReleaseChangeVersion
        /// </summary>
        [Preserve]
        [DataMember(Name = "last_modified_by", EmitDefaultValue = false)]
        public string LastModifiedBy{ get; }
        
        /// <summary>
        /// Parameter last_modified_by_name of CcdReleaseChangeVersion
        /// </summary>
        [Preserve]
        [DataMember(Name = "last_modified_by_name", EmitDefaultValue = false)]
        public string LastModifiedByName{ get; }
        
        /// <summary>
        /// Parameter loading of CcdReleaseChangeVersion
        /// </summary>
        [Preserve]
        [DataMember(Name = "loading", EmitDefaultValue = true)]
        public bool Loading{ get; }
        
        /// <summary>
        /// Parameter unchanged of CcdReleaseChangeVersion
        /// </summary>
        [Preserve]
        [DataMember(Name = "unchanged", EmitDefaultValue = false)]
        public int Unchanged{ get; }
        
        /// <summary>
        /// Parameter update of CcdReleaseChangeVersion
        /// </summary>
        [Preserve]
        [DataMember(Name = "update", EmitDefaultValue = false)]
        public int Update{ get; }
    
        /// <summary>
        /// Formats a CcdReleaseChangeVersion into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            serializedModel += "add," + Add.ToString() + ",";
            serializedModel += "delete," + Delete.ToString() + ",";
            if (LastModified != null)
            {
                serializedModel += "last_modified," + LastModified.ToString() + ",";
            }
            if (LastModifiedBy != null)
            {
                serializedModel += "last_modified_by," + LastModifiedBy + ",";
            }
            if (LastModifiedByName != null)
            {
                serializedModel += "last_modified_by_name," + LastModifiedByName + ",";
            }
            serializedModel += "loading," + Loading.ToString() + ",";
            serializedModel += "unchanged," + Unchanged.ToString() + ",";
            serializedModel += "update," + Update.ToString();
            return serializedModel;
        }

        /// <summary>
        /// Returns a CcdReleaseChangeVersion as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            var addStringValue = Add.ToString();
            dictionary.Add("add", addStringValue);
            
            var deleteStringValue = Delete.ToString();
            dictionary.Add("delete", deleteStringValue);
            
            if (LastModified != null)
            {
                var last_modifiedStringValue = LastModified.ToString();
                dictionary.Add("last_modified", last_modifiedStringValue);
            }
            
            if (LastModifiedBy != null)
            {
                var last_modified_byStringValue = LastModifiedBy.ToString();
                dictionary.Add("last_modified_by", last_modified_byStringValue);
            }
            
            if (LastModifiedByName != null)
            {
                var last_modified_by_nameStringValue = LastModifiedByName.ToString();
                dictionary.Add("last_modified_by_name", last_modified_by_nameStringValue);
            }
            
            var loadingStringValue = Loading.ToString();
            dictionary.Add("loading", loadingStringValue);
            
            var unchangedStringValue = Unchanged.ToString();
            dictionary.Add("unchanged", unchangedStringValue);
            
            var updateStringValue = Update.ToString();
            dictionary.Add("update", updateStringValue);
            
            return dictionary;
        }
    }
}
