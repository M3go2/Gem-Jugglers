//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ccd.Management.Http;



namespace Unity.Services.Ccd.Management.Models
{
    /// <summary>
    /// CcdEnvironment model
    /// </summary>
    [Preserve]
    [DataContract(Name = "ccd.environment")]
    public class CcdEnvironment
    {
        /// <summary>
        /// Creates an instance of CcdEnvironment.
        /// </summary>
        /// <param name="id">id param</param>
        /// <param name="isDefault">isDefault param</param>
        /// <param name="name">name param</param>
        /// <param name="projectId">projectId param</param>
        [Preserve]
        public CcdEnvironment(System.Guid id = default, bool isDefault = default, string name = default, System.Guid projectId = default)
        {
            Id = id;
            IsDefault = isDefault;
            Name = name;
            ProjectId = projectId;
        }

        /// <summary>
        /// Parameter id of CcdEnvironment
        /// </summary>
        [Preserve]
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public System.Guid Id{ get; }
        
        /// <summary>
        /// Parameter is_default of CcdEnvironment
        /// </summary>
        [Preserve]
        [DataMember(Name = "is_default", EmitDefaultValue = true)]
        public bool IsDefault{ get; }
        
        /// <summary>
        /// Parameter name of CcdEnvironment
        /// </summary>
        [Preserve]
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name{ get; }
        
        /// <summary>
        /// Parameter project_id of CcdEnvironment
        /// </summary>
        [Preserve]
        [DataMember(Name = "project_id", EmitDefaultValue = false)]
        public System.Guid ProjectId{ get; }
    
        /// <summary>
        /// Formats a CcdEnvironment into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Id != null)
            {
                serializedModel += "id," + Id + ",";
            }
            serializedModel += "is_default," + IsDefault.ToString() + ",";
            if (Name != null)
            {
                serializedModel += "name," + Name + ",";
            }
            if (ProjectId != null)
            {
                serializedModel += "project_id," + ProjectId;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a CcdEnvironment as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Id != null)
            {
                var idStringValue = Id.ToString();
                dictionary.Add("id", idStringValue);
            }
            
            var is_defaultStringValue = IsDefault.ToString();
            dictionary.Add("is_default", is_defaultStringValue);
            
            if (Name != null)
            {
                var nameStringValue = Name.ToString();
                dictionary.Add("name", nameStringValue);
            }
            
            if (ProjectId != null)
            {
                var project_idStringValue = ProjectId.ToString();
                dictionary.Add("project_id", project_idStringValue);
            }
            
            return dictionary;
        }
    }
}
