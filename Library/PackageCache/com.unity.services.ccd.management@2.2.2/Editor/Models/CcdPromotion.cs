//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ccd.Management.Http;



namespace Unity.Services.Ccd.Management.Models
{
    /// <summary>
    /// CcdPromotion model
    /// </summary>
    [Preserve]
    [DataContract(Name = "ccd.promotion")]
    public class CcdPromotion
    {
        /// <summary>
        /// Creates an instance of CcdPromotion.
        /// </summary>
        /// <param name="error">error param</param>
        /// <param name="fromBucketId">fromBucketId param</param>
        /// <param name="fromBucketName">fromBucketName param</param>
        /// <param name="fromEnvironmentId">fromEnvironmentId param</param>
        /// <param name="fromEnvironmentName">fromEnvironmentName param</param>
        /// <param name="fromReleaseId">fromReleaseId param</param>
        /// <param name="fromReleaseNumber">fromReleaseNumber param</param>
        /// <param name="promotionId">promotionId param</param>
        /// <param name="promotionStatus">promotionStatus param</param>
        /// <param name="toBucketId">toBucketId param</param>
        /// <param name="toBucketName">toBucketName param</param>
        /// <param name="toEnvironmentId">toEnvironmentId param</param>
        /// <param name="toEnvironmentName">toEnvironmentName param</param>
        /// <param name="toReleaseId">toReleaseId param</param>
        [Preserve]
        public CcdPromotion(string error = default, System.Guid fromBucketId = default, string fromBucketName = default, System.Guid fromEnvironmentId = default, string fromEnvironmentName = default, System.Guid fromReleaseId = default, int fromReleaseNumber = default, System.Guid promotionId = default, PromotionStatusOptions promotionStatus = default, System.Guid toBucketId = default, string toBucketName = default, System.Guid toEnvironmentId = default, string toEnvironmentName = default, System.Guid toReleaseId = default)
        {
            Error = error;
            FromBucketId = fromBucketId;
            FromBucketName = fromBucketName;
            FromEnvironmentId = fromEnvironmentId;
            FromEnvironmentName = fromEnvironmentName;
            FromReleaseId = fromReleaseId;
            FromReleaseNumber = fromReleaseNumber;
            PromotionId = promotionId;
            PromotionStatus = promotionStatus;
            ToBucketId = toBucketId;
            ToBucketName = toBucketName;
            ToEnvironmentId = toEnvironmentId;
            ToEnvironmentName = toEnvironmentName;
            ToReleaseId = toReleaseId;
        }

        /// <summary>
        /// Parameter error of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "error", EmitDefaultValue = false)]
        public string Error{ get; }
        
        /// <summary>
        /// Parameter from_bucket_id of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "from_bucket_id", EmitDefaultValue = false)]
        public System.Guid FromBucketId{ get; }
        
        /// <summary>
        /// Parameter from_bucket_name of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "from_bucket_name", EmitDefaultValue = false)]
        public string FromBucketName{ get; }
        
        /// <summary>
        /// Parameter from_environment_id of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "from_environment_id", EmitDefaultValue = false)]
        public System.Guid FromEnvironmentId{ get; }
        
        /// <summary>
        /// Parameter from_environment_name of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "from_environment_name", EmitDefaultValue = false)]
        public string FromEnvironmentName{ get; }
        
        /// <summary>
        /// Parameter from_release_id of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "from_release_id", EmitDefaultValue = false)]
        public System.Guid FromReleaseId{ get; }
        
        /// <summary>
        /// Parameter from_release_number of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "from_release_number", EmitDefaultValue = false)]
        public int FromReleaseNumber{ get; }
        
        /// <summary>
        /// Parameter promotion_id of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "promotion_id", EmitDefaultValue = false)]
        public System.Guid PromotionId{ get; }
        
        /// <summary>
        /// Parameter promotion_status of CcdPromotion
        /// </summary>
        [Preserve]
        [JsonConverter(typeof(StringEnumConverter))]
        [DataMember(Name = "promotion_status", EmitDefaultValue = false)]
        public PromotionStatusOptions PromotionStatus{ get; }
        
        /// <summary>
        /// Parameter to_bucket_id of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "to_bucket_id", EmitDefaultValue = false)]
        public System.Guid ToBucketId{ get; }
        
        /// <summary>
        /// Parameter to_bucket_name of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "to_bucket_name", EmitDefaultValue = false)]
        public string ToBucketName{ get; }
        
        /// <summary>
        /// Parameter to_environment_id of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "to_environment_id", EmitDefaultValue = false)]
        public System.Guid ToEnvironmentId{ get; }
        
        /// <summary>
        /// Parameter to_environment_name of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "to_environment_name", EmitDefaultValue = false)]
        public string ToEnvironmentName{ get; }
        
        /// <summary>
        /// Parameter to_release_id of CcdPromotion
        /// </summary>
        [Preserve]
        [DataMember(Name = "to_release_id", EmitDefaultValue = false)]
        public System.Guid ToReleaseId{ get; }
    
        /// <summary>
        /// Defines PromotionStatus
        /// </summary>
        [Preserve]
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PromotionStatusOptions
        {
            /// <summary>
            /// Enum NotFound for value: NotFound
            /// </summary>
            [EnumMember(Value = "NotFound")]
            NotFound = 1,
            /// <summary>
            /// Enum Complete for value: Complete
            /// </summary>
            [EnumMember(Value = "Complete")]
            Complete = 2,
            /// <summary>
            /// Enum InProgress for value: InProgress
            /// </summary>
            [EnumMember(Value = "InProgress")]
            InProgress = 3,
            /// <summary>
            /// Enum Failed for value: Failed
            /// </summary>
            [EnumMember(Value = "Failed")]
            Failed = 4
        }

        /// <summary>
        /// Formats a CcdPromotion into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Error != null)
            {
                serializedModel += "error," + Error + ",";
            }
            if (FromBucketId != null)
            {
                serializedModel += "from_bucket_id," + FromBucketId + ",";
            }
            if (FromBucketName != null)
            {
                serializedModel += "from_bucket_name," + FromBucketName + ",";
            }
            if (FromEnvironmentId != null)
            {
                serializedModel += "from_environment_id," + FromEnvironmentId + ",";
            }
            if (FromEnvironmentName != null)
            {
                serializedModel += "from_environment_name," + FromEnvironmentName + ",";
            }
            if (FromReleaseId != null)
            {
                serializedModel += "from_release_id," + FromReleaseId + ",";
            }
            serializedModel += "from_release_number," + FromReleaseNumber.ToString() + ",";
            if (PromotionId != null)
            {
                serializedModel += "promotion_id," + PromotionId + ",";
            }
            serializedModel += "promotion_status," + PromotionStatus + ",";
            if (ToBucketId != null)
            {
                serializedModel += "to_bucket_id," + ToBucketId + ",";
            }
            if (ToBucketName != null)
            {
                serializedModel += "to_bucket_name," + ToBucketName + ",";
            }
            if (ToEnvironmentId != null)
            {
                serializedModel += "to_environment_id," + ToEnvironmentId + ",";
            }
            if (ToEnvironmentName != null)
            {
                serializedModel += "to_environment_name," + ToEnvironmentName + ",";
            }
            if (ToReleaseId != null)
            {
                serializedModel += "to_release_id," + ToReleaseId;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a CcdPromotion as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Error != null)
            {
                var errorStringValue = Error.ToString();
                dictionary.Add("error", errorStringValue);
            }
            
            if (FromBucketId != null)
            {
                var from_bucket_idStringValue = FromBucketId.ToString();
                dictionary.Add("from_bucket_id", from_bucket_idStringValue);
            }
            
            if (FromBucketName != null)
            {
                var from_bucket_nameStringValue = FromBucketName.ToString();
                dictionary.Add("from_bucket_name", from_bucket_nameStringValue);
            }
            
            if (FromEnvironmentId != null)
            {
                var from_environment_idStringValue = FromEnvironmentId.ToString();
                dictionary.Add("from_environment_id", from_environment_idStringValue);
            }
            
            if (FromEnvironmentName != null)
            {
                var from_environment_nameStringValue = FromEnvironmentName.ToString();
                dictionary.Add("from_environment_name", from_environment_nameStringValue);
            }
            
            if (FromReleaseId != null)
            {
                var from_release_idStringValue = FromReleaseId.ToString();
                dictionary.Add("from_release_id", from_release_idStringValue);
            }
            
            var from_release_numberStringValue = FromReleaseNumber.ToString();
            dictionary.Add("from_release_number", from_release_numberStringValue);
            
            if (PromotionId != null)
            {
                var promotion_idStringValue = PromotionId.ToString();
                dictionary.Add("promotion_id", promotion_idStringValue);
            }
            
            var promotion_statusStringValue = PromotionStatus.ToString();
            dictionary.Add("promotion_status", promotion_statusStringValue);
            
            if (ToBucketId != null)
            {
                var to_bucket_idStringValue = ToBucketId.ToString();
                dictionary.Add("to_bucket_id", to_bucket_idStringValue);
            }
            
            if (ToBucketName != null)
            {
                var to_bucket_nameStringValue = ToBucketName.ToString();
                dictionary.Add("to_bucket_name", to_bucket_nameStringValue);
            }
            
            if (ToEnvironmentId != null)
            {
                var to_environment_idStringValue = ToEnvironmentId.ToString();
                dictionary.Add("to_environment_id", to_environment_idStringValue);
            }
            
            if (ToEnvironmentName != null)
            {
                var to_environment_nameStringValue = ToEnvironmentName.ToString();
                dictionary.Add("to_environment_name", to_environment_nameStringValue);
            }
            
            if (ToReleaseId != null)
            {
                var to_release_idStringValue = ToReleaseId.ToString();
                dictionary.Add("to_release_id", to_release_idStringValue);
            }
            
            return dictionary;
        }
    }
}
