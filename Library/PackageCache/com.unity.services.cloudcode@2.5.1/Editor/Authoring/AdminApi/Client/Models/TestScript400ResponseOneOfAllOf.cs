//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.CloudCode.Authoring.Client.Http;



namespace Unity.Services.CloudCode.Authoring.Client.Models
{
    /// <summary>
    /// TestScript400ResponseOneOfAllOf model
    /// </summary>
    [Preserve]
    [DataContract(Name = "testScript_400_response_oneOf_allOf")]
    internal class TestScript400ResponseOneOfAllOf
    {
        /// <summary>
        /// Creates an instance of TestScript400ResponseOneOfAllOf.
        /// </summary>
        /// <param name="logs">Logs from the function that were collected before encountering the error</param>
        [Preserve]
        public TestScript400ResponseOneOfAllOf(List<string> logs = default)
        {
            Logs = logs;
        }

        /// <summary>
        /// Logs from the function that were collected before encountering the error
        /// </summary>
        [Preserve]
        [DataMember(Name = "logs", EmitDefaultValue = false)]
        public List<string> Logs{ get; }
    
        /// <summary>
        /// Formats a TestScript400ResponseOneOfAllOf into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Logs != null)
            {
                serializedModel += "logs," + Logs.ToString();
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a TestScript400ResponseOneOfAllOf as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Logs != null)
            {
                var logsStringValue = Logs.ToString();
                dictionary.Add("logs", logsStringValue);
            }
            
            return dictionary;
        }
    }
}
